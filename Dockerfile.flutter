# Dockerfile para Flutter Web
FROM debian:latest AS build-env

# Instalar dependencias
RUN apt-get update && \
    apt-get install -y curl git wget unzip libgconf-2-4 gdb libstdc++6 \
    libglu1-mesa fonts-droid-fallback lib32stdc++6 python3 sed && \
    apt-get clean

# Descargar e instalar Flutter
RUN git clone https://github.com/flutter/flutter.git /usr/local/flutter

# Configurar variables de entorno
ENV PATH="/usr/local/flutter/bin:/usr/local/flutter/bin/cache/dart-sdk/bin:${PATH}"

# Habilitar Flutter Web
RUN flutter channel stable && \
    flutter upgrade && \
    flutter config --enable-web

# Verificar instalación
RUN flutter doctor -v

# Establecer directorio de trabajo
WORKDIR /app

# Copiar archivos de Flutter
COPY pubspec.* ./
RUN flutter pub get

# Copiar el resto del código
COPY . .

# Compilar para web
RUN flutter build web --release --web-renderer html

# Etapa de producción con Nginx
FROM nginx:alpine

# Copiar configuración de Nginx
COPY --from=build-env /app/build/web /usr/share/nginx/html

# Crear configuración personalizada de Nginx
RUN echo 'server { \n\
    listen 80; \n\
    server_name localhost; \n\
    root /usr/share/nginx/html; \n\
    index index.html; \n\
    \n\
    location / { \n\
        try_files $uri $uri/ /index.html; \n\
    } \n\
    \n\
    location /api/ { \n\
        proxy_pass http://api:3000/api/; \n\
        proxy_http_version 1.1; \n\
        proxy_set_header Upgrade $http_upgrade; \n\
        proxy_set_header Connection "upgrade"; \n\
        proxy_set_header Host $host; \n\
        proxy_cache_bypass $http_upgrade; \n\
        proxy_set_header X-Real-IP $remote_addr; \n\
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; \n\
        proxy_set_header X-Forwarded-Proto $scheme; \n\
    } \n\
    \n\
    # Cache static assets \n\
    location ~* \.(jpg|jpeg|png|gif|ico|css|js|woff|woff2)$ { \n\
        expires 1y; \n\
        add_header Cache-Control "public, immutable"; \n\
    } \n\
}' > /etc/nginx/conf.d/default.conf

# Exponer puerto 80
EXPOSE 80

# Comando de inicio
CMD ["nginx", "-g", "daemon off;"]